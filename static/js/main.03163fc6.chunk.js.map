{"version":3,"sources":["Components/Modal/Modal.jsx","context.js","Helpers/timerParser.js","assets/images/refresh.svg","Components/ControlPanel/ControlPanel.jsx","Components/Cell/Cell.jsx","Helpers/array.js","Helpers/classManipulation.js","configs.js","Containers/GameCanvas/GameCanvas.jsx","assets/images/memory.svg","Components/Header/Header.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Modal","close","isWin","win","lose","className","onClick","Context","createContext","timerParser","ms","minutes","Math","floor","seconds","toFixed","ControlPanel","restart","useState","timer","setTimer","int","setInt","useContext","analytics","setAnalytics","gameStatusCell","useRef","useEffect","gameStatus","clearInterval","current","style","background","interval","setInterval","prev","prevState","totalPlayedTime","totalGames","console","log","src","reload","alt","ref","maxPairs","Cell","clicker","hero","position","name","id","arrayFn","shuffle","array","i","length","j","random","buildFlatPairsArray","dimension","heroes","helperHerosTable","helperHerosIdTable","totalCells","remainHeroes","slice","isEven","pairsOfHeroes","heroIndex","randomHero","splice","push","toString","this","buildNestedPairsArray","nestedTableWithHeroes","pairsArrayWithHeroes","pairs","map","item","filter","row","classHelper","manipulationIfNotContain","baseClass","notContainedClass","whatClass","action","actionFn","defineAction","document","querySelectorAll","forEach","classList","contains","manipulation","allElements","type","add","remove","configs","Table","gameTable","handleClick","GameCanvas","setGameTable","pairsInGame","setPairsInGame","clickedHero","clickedHeroId","choseCard","setChoseCard","showModal","setShowModal","count","prevId","guessedInARow","setGuessedInARow","generateNewGameData","useMemo","repeatGame","setTimeout","e","clickedCard","currentTarget","toggle","dataset","pairsRemains","Header","logo","App","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03163fc6.chunk.js","sourcesContent":["import './modal.css';\r\n\r\nconst Modal = ({ close, isWin = false }) => {\r\n  const win = <p>Congratulations! <br /> You win!</p>\r\n  const lose = <p>Sorry! You lose!</p>\r\n\r\n  return (\r\n    <div className='modal' onClick={close}>\r\n      <div className='modal-wrapper'>\r\n        <div className='modal-body'>\r\n          {isWin ? win : lose}\r\n        </div>\r\n        <button onClick={close}>CONTINUE</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal;","import { createContext } from 'react';\r\n\r\nconst Context = createContext();\r\nexport default Context;","const timerParser = ms => {\r\n  let minutes = Math.floor(ms / 60);\r\n  let seconds = ((ms % 60)).toFixed(0);\r\n  return minutes + \"m:\" + (seconds < 10 ? '0' : '') + seconds + \"s\";\r\n}\r\n\r\nexport { timerParser };","export default __webpack_public_path__ + \"static/media/refresh.b4995814.svg\";","import { useState, useEffect, useRef } from 'react';\r\nimport { useContext } from 'react';\r\nimport Context from '../../context';\r\nimport { timerParser } from '../../Helpers/timerParser';\r\nimport reload from '../../assets/images/refresh.svg';\r\nimport './controlPanel.css';\r\n\r\nconst ControlPanel = ({ restart }) => {\r\n  const [timer, setTimer] = useState(0);\r\n  const [int, setInt] = useState(null);\r\n  const { analytics, setAnalytics } = useContext(Context);\r\n  const gameStatusCell = useRef();\r\n\r\n  useEffect(() => {\r\n    switch (analytics.gameStatus) {\r\n      case 'NOT STARTED':\r\n        setTimer(0);\r\n        clearInterval(int);\r\n        gameStatusCell.current.style.background = 'rgb(0, 102, 255)';\r\n        break;\r\n\r\n      case 'IN PROGRESS':\r\n        setTimer(0);\r\n        gameStatusCell.current.style.background = 'rgba(7, 138, 7, 0.863)';\r\n        let interval = setInterval(() => {\r\n          setInt(interval);\r\n          setTimer(prev => prev + 1);\r\n        }, 1000);\r\n        break;\r\n\r\n      case 'END':\r\n        gameStatusCell.current.style.background = 'rgba(141, 5, 5, 0.836)';\r\n        setAnalytics((prevState) => ({ ...prevState, totalPlayedTime: prevState.totalPlayedTime + timer, totalGames: prevState.totalGames + 1 }));\r\n        clearInterval(int);\r\n        break;\r\n      default:\r\n        console.log('default');\r\n    }\r\n    return () => clearInterval(int);\r\n  }, [analytics.gameStatus]);\r\n\r\n  return (\r\n    <div className='panel'>\r\n      <button onClick={restart} className='restartBtn'>\r\n        <img src={reload} alt='reload' />\r\n      </button>\r\n      <div className='info-wrapper'>\r\n        <div className='info game-start'>\r\n          <p className='info-label'>Game status </p>\r\n          <p ref={gameStatusCell} className='info-value status'>{analytics.gameStatus}</p>\r\n        </div>\r\n        <div className='info total-timer-wrapper'>\r\n          <p className='info-label'>Total Timer </p>\r\n          <p className='info-value'>{timerParser(analytics.totalPlayedTime)}</p>\r\n        </div>\r\n        <div className='info total-games-wrapper'>\r\n          <p className='info-label'>Total Games </p>\r\n          <p className='info-value'>{analytics.totalGames}</p>\r\n        </div>\r\n        <div className='info timer-wrapper'>\r\n          <p className='info-label'>Current Timer </p>\r\n          <p className='info-value'>{timerParser(timer)}</p>\r\n        </div>\r\n        <div className='info score-wrapper'>\r\n          <p className='info-label'>Max Pairs </p>\r\n          <p className='info-value'>{analytics.maxPairs}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ControlPanel;","import './cell.css';\r\n\r\nconst Cell = ({ clicker, hero }) => {\r\n  const style = {\r\n    'backgroundPosition': hero?.position\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={clicker}\r\n      data-hero={hero.name}\r\n      data-id={hero.id}\r\n      className='cell'>\r\n      <div className='face front'>\r\n        {/* <div className='logo'><span>{hero.name}</span></div> */}\r\n        <div className='logo'></div>\r\n      </div>\r\n      <div className='face back'>\r\n        <div className={hero.name === 'empty' ? 'empty-hero' : 'hero'} style={style}></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cell;","const arrayFn = {\r\n\r\n  shuffle: function (array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n      return array;\r\n    }\r\n  },\r\n\r\n  buildFlatPairsArray: function (dimension, heroes) {\r\n    let helperHerosTable = [];\r\n    let helperHerosIdTable = [];\r\n    let totalCells = dimension ** 2;\r\n\r\n    let remainHeroes = heroes.slice();\r\n\r\n    const isEven = totalCells % 2 === 0;\r\n    const pairsOfHeroes = Math.floor(totalCells / 2);\r\n\r\n    for (let i = 0; i < pairsOfHeroes; i++) {\r\n      const heroIndex = Math.floor(Math.random() * (remainHeroes.length));\r\n      const randomHero = remainHeroes[heroIndex];\r\n      remainHeroes.splice(heroIndex, 1);\r\n      helperHerosTable.push(randomHero);\r\n    }\r\n\r\n    helperHerosTable.push(...helperHerosTable);\r\n    if (!isEven) helperHerosTable.push({ name: 'empty' });\r\n\r\n    for (let i = 0; i < helperHerosTable.length; i++) {\r\n      helperHerosTable[i].id = `f${(~~(Math.random() * 1e8)).toString(16)}`;\r\n      helperHerosIdTable.push({ ...helperHerosTable[i] });\r\n    };\r\n\r\n    this.shuffle(helperHerosIdTable);\r\n    return helperHerosIdTable;\r\n  },\r\n\r\n  buildNestedPairsArray: function (dimension, heroes) {\r\n    const nestedTableWithHeroes = [];\r\n\r\n    let pairsArrayWithHeroes = this.buildFlatPairsArray(dimension, heroes);\r\n    const pairs = pairsArrayWithHeroes.map(item => item.name).filter(item => item !== 'empty');\r\n\r\n    while (pairsArrayWithHeroes.length > 0) {\r\n      const row = pairsArrayWithHeroes.splice(0, dimension);\r\n      nestedTableWithHeroes.push(row);\r\n    }\r\n    return { nestedTableWithHeroes, pairs };\r\n  }\r\n}\r\nexport default arrayFn;","export const classHelper = {\r\n\r\n  manipulationIfNotContain: function (baseClass, notContainedClass, whatClass, action) {\r\n    const actionFn = this.defineAction(action);\r\n    const allElements = [...document.querySelectorAll(`.${baseClass}`)];\r\n    allElements.forEach(item => {\r\n      if (!item.classList.contains(notContainedClass)) {\r\n        actionFn(item, whatClass);\r\n      }\r\n    })\r\n  },\r\n\r\n  manipulation: function (baseClass, whatClass, action) {\r\n    const allElements = [...document.querySelectorAll(`.${baseClass}`)];\r\n    const actionFn = this.defineAction(action);\r\n    allElements.forEach(item => actionFn(item, whatClass));\r\n  },\r\n\r\n  defineAction: function (type) {\r\n    let actionFn;\r\n    if (type === 'add') {\r\n      actionFn = (item, whatClass) => item.classList.add(...whatClass);\r\n    } else {\r\n      actionFn = (item, whatClass) => item.classList.remove(...whatClass);\r\n    }\r\n    return actionFn;\r\n  }\r\n}\r\n","const configs = {\r\n  gameDimension: 5,\r\n  analyticsInfo:\r\n  {\r\n    maxPairs: 0,\r\n    totalPlayedTime: 0,\r\n    totalGames: 0,\r\n    gameStatus: 'NOT STARTED'\r\n  }\r\n}\r\n\r\nconst heroes = [\r\n  {\r\n    name: 'Star Lord',\r\n    position: '-28px 19px',\r\n  },\r\n  {\r\n    name: 'Black Widow',\r\n    position: '-9px -7px',\r\n  },\r\n  {\r\n    name: 'Nebula',\r\n    position: '9px -7px',\r\n  },\r\n  {\r\n    name: 'War Machine',\r\n    position: '-28px -7px',\r\n  },\r\n  {\r\n    name: 'Ant-Man',\r\n    position: '28px -7px',\r\n  },\r\n  {\r\n    name: 'Ms. Marvel',\r\n    position: '9px 19px',\r\n  },\r\n  {\r\n    name: 'Hawkeye',\r\n    position: '27px 45px',\r\n  },\r\n  {\r\n    name: 'Hulk',\r\n    position: '-10px 19px',\r\n  },\r\n  {\r\n    name: 'Thanos',\r\n    position: '28px 19px',\r\n  },\r\n  {\r\n    name: 'Thor',\r\n    position: '-28px 45px',\r\n  },\r\n  {\r\n    name: 'Iron Man',\r\n    position: '9.5px 45px',\r\n  },\r\n  {\r\n    name: 'Captain America',\r\n    position: '-9px 45px',\r\n  }]\r\n\r\nexport { configs, heroes };\r\n\r\n","import { useState, useContext, useEffect, useMemo } from 'react';\r\nimport Modal from '../../Components/Modal/Modal';\r\nimport ControlPanel from '../../Components/ControlPanel/ControlPanel';\r\nimport Cell from '../../Components/Cell/Cell';\r\nimport Context from '../../context';\r\nimport arrayFn from '../../Helpers/array';\r\nimport { classHelper } from '../../Helpers/classManipulation';\r\nimport { configs, heroes } from '../../configs';\r\nimport './canvasStyle.css';\r\n\r\nconst GameCanvas = () => {\r\n\r\n  const [gameTable, setGameTable] = useState([]);\r\n  const [pairsInGame, setPairsInGame] = useState([]);\r\n  const [choseCard, setChoseCard] = useState({ clickedHero: '', clickedHeroId: '' });\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [guessedInARow, setGuessedInARow] = useState({ count: 0, prevId: null });\r\n  const { analytics, setAnalytics } = useContext(Context);\r\n\r\n  const generateNewGameData = (dimension, heroes) => {\r\n    const { nestedTableWithHeroes, pairs } = arrayFn.buildNestedPairsArray(dimension, heroes);\r\n    setGameTable(nestedTableWithHeroes);\r\n    setPairsInGame(pairs);\r\n  }\r\n\r\n  useMemo(() => { generateNewGameData(configs.gameDimension, heroes) }, [configs.gameDimension, heroes.length]);\r\n\r\n  useEffect(() => {\r\n    if (guessedInARow.count >= analytics.maxPairs) {\r\n      setAnalytics((prev) => ({ ...prev, maxPairs: guessedInARow.count }));\r\n    }\r\n  }, [guessedInARow.count]);\r\n\r\n  const repeatGame = () => {\r\n    setGuessedInARow({ count: 0, prevId: null });\r\n    setAnalytics({ ...analytics, gameStatus: 'NOT STARTED' });\r\n    setChoseCard({ clickedHero: '', clickedHeroId: '' });\r\n    setShowModal(false);\r\n\r\n    classHelper.manipulation('cell', ['rotated', 'freezed', 'guessed'], 'remove');\r\n\r\n    setTimeout(() => {\r\n      generateNewGameData(configs.gameDimension, heroes);\r\n    }, 1000);\r\n  }\r\n\r\n  const handleClick = (e) => {\r\n    if (analytics.gameStatus === 'NOT STARTED') {\r\n      setAnalytics({ ...analytics, gameStatus: 'IN PROGRESS' });\r\n    }\r\n    const clickedCard = e.currentTarget;\r\n    clickedCard.classList.toggle('rotated');\r\n    const clickedHero = clickedCard.dataset.hero;\r\n    const clickedHeroId = clickedCard.dataset.id;\r\n\r\n    if (!choseCard.clickedHero) {\r\n      if (clickedHero === 'empty') {\r\n        setGuessedInARow({ count: 0, prevId: null });\r\n        classHelper.manipulation('cell', ['freezed'], 'add');\r\n        setTimeout(() => {\r\n          clickedCard.classList.toggle('rotated');\r\n          classHelper.manipulation('cell', ['freezed'], 'remove');\r\n        }, 1000);\r\n      } else {\r\n        setChoseCard({ clickedHero, clickedHeroId });\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (choseCard.clickedHero === clickedHero && choseCard.clickedHeroId !== clickedHeroId) {\r\n      const pairsRemains = pairsInGame.filter(hero => hero !== clickedHero);\r\n      setPairsInGame(pairsRemains);\r\n      setGuessedInARow(prev => ({ ...prev, count: prev.count + 1 }));\r\n\r\n      if (pairsRemains.length === 0) {\r\n        setAnalytics(prevState => ({ ...prevState, gameStatus: 'END' }));\r\n        setTimeout(() => {\r\n          classHelper.manipulationIfNotContain('cell', 'rotated', ['rotated', 'freezed'], 'add');\r\n\r\n          setGuessedInARow({ count: 0, prevId: null });\r\n\r\n          setTimeout(() => {\r\n            setShowModal(true);\r\n          }, 1000);\r\n        }, 1000);\r\n      }\r\n      classHelper.manipulation('rotated', ['guessed'], 'add');\r\n      setChoseCard({ clickedHero: '', clickedHeroId: '' });\r\n\r\n    } else {\r\n      classHelper.manipulation('cell', ['freezed'], 'add');\r\n      setGuessedInARow({ count: 0, prevId: null });\r\n\r\n      setTimeout(() => {\r\n        setChoseCard({ clickedHero: '', clickedHeroId: '' });\r\n        classHelper.manipulationIfNotContain('cell', 'guessed', ['rotated', 'freezed'], 'remove');\r\n      }, 1000);\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className='game-wrapper'>\r\n      <ControlPanel restart={repeatGame} />\r\n      <Table\r\n        gameTable={gameTable}\r\n        handleClick={handleClick}\r\n      />\r\n\r\n      {showModal &&\r\n        <Modal\r\n          isWin={pairsInGame.length === 0}\r\n          close={repeatGame}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Table = ({ gameTable, handleClick }) => {\r\n  return (\r\n    <div className='canvas'>\r\n      {\r\n        gameTable.map((row, i) =>\r\n          <div key={i} className='row'>\r\n            {row.map(hero => <Cell key={hero.id} clicker={handleClick} hero={hero} />)}\r\n          </div>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameCanvas;","export default __webpack_public_path__ + \"static/media/memory.8a33a641.svg\";","import logo from '../../assets/images/memory.svg';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <div className=\"game-logo\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n      <h2 className=\"name\">Memory Game</h2>\r\n      <div className=\"game-logo reverse\">\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import { useState } from 'react';\nimport GameCanvas from './Containers/GameCanvas/GameCanvas';\nimport Header from './Components/Header/Header';\nimport Context from './context';\nimport { configs } from './configs'\n\nfunction App() {\n  const [analytics, setAnalytics] = useState(configs.analyticsInfo);\n\n  return (\n    <Context.Provider value={{ analytics, setAnalytics }}>\n      <div className=\"App\">\n        <Header />\n        <GameCanvas />\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}